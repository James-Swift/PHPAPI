var swdapi=swdapi||function(f,r){function k(s,t){return typeof s!=="undefined"?s:t}r=k(r,{});if(XMLHttpRequest===undefined){throw"SWDAPI: Required component 'XMLHttpRequest' not defined."}if(Date.now===undefined){throw"SWDAPI: Required component 'Date.now' not defined."}if(Number.isInteger===undefined){throw"SWDAPI: Required component 'Number.isInteger' not defined."}if(console.log===undefined){throw"SWDAPI: Required component 'console.log' not defined."}if(forge_sha256===undefined){throw"SWDAPI: Required component 'forge_sha256' not defined. Did you forget to include it?"}var c=f,h=0,e=(typeof r.fetchClientData==="function"?r.fetchClientData:d),m=(typeof r.storeClientData==="function"?r.storeClientData:g),o={request:b,serverDate:j,registerClient:l,setFetchClientDataHandler:function(s){if(typeof s==="function"){e=s;return true}throw"Could not store fetchClientData handler. Not a callable function."},setStoreClientDataHandler:function(s){if(typeof s==="function"){m=s;return true}throw"Could not store storeClientData handler. Not a callable function."}};if(r.setClientName!==undefined&&typeof r.setClientName==="string"){var a=e();if(typeof a!=="object"||a.name===undefined||a.name!==r.setClientName.substring(0,140)){l(r.setClientName)}}if(r.serverTimestamp!==undefined){if(Number.isInteger(r.serverTimestamp)===true){q(r.serverTimestamp*1000)}else{console.log("Supplied serverTimestamp was an invalid format. Must be positive integer. The server time will be noted on the next request instead.")}}return o;function p(w,u){var v={},t=j().getTime(),s=e();if(s.id!==undefined&&s.secret!==undefined){v.client={id:s.id}}v.nonce=(Math.random().toString(36)+"00000000000000000").slice(2,10+2);v.valid={from:Math.floor(t/1000)-(60),to:Math.floor(t/1000)+(60)};v.signature=n(w,v,u);return v}function n(y,w,v){var x,u,t,s=e();x=JSON.stringify([y,w,v]);u="swdapi";if(w.client!==undefined&&w.client.id!==undefined&&s.secret!==undefined){u+=s.secret}if(w.user!==undefined){}t=forge_sha256(x+u);return t}function l(u,w){u=k(u,null);w=k(w,null);var v=e(),s={salt:(Math.random().toString(36)+"00000000000000000").slice(2,10+2)},t;if(typeof v==="object"&&v.id!==undefined){s.id=v.id}if(typeof v==="object"&&v.id!==undefined&&v.secret!==undefined){s.signature=forge_sha256("swdapi"+v.id+v.secret)}if(typeof u==="string"){s.name=u.substring(0,140)}else{if(u!==null){throw"Cannot register client. Argument 1 must be either a string or null."}else{if(typeof v==="object"&&v.name!==undefined){s.name=v.name}else{throw"Cannot register a client without a name. No name is stored and no name was passed to registerClient()"}}}t=function(z){if(typeof z!=="object"||z.id===undefined||z.name===undefined){throw"Could not confirm registration of the client. An unexpected error occured."}var y={name:z.name,id:z.id,},x;if(v.id!==undefined&&v.secret!==undefined){y.secret=v.secret;x=forge_sha256("swdapi"+s.salt+s.id+v.secret);if(z.signature===undefined||x!==z.signature){throw"Failed to confirm the client id. The signature returned by the server doesn't match ours. This should be impossible without a man in the middle."}}else{if(z.secret!==undefined){y.secret=z.secret}}m(y);console.log("New client registered successfully: "+y.name);if(typeof w==="function"){w()}};b("swdapi/registerClient",s,t,function(x){if(typeof x!=="object"||x["SWDAPI-Error"]===undefined||!(x["SWDAPI-Error"].code===400014||x["SWDAPI-Error"].code===403002)){throw"Could not register the client. An unexpected error occured."}console.log("The client id-secret pair stored on this device has either expired or is corrupt. Requesting a new one.");delete v.id;delete v.secret;m({name:s.name,});delete s.id;delete s.signature;b("swdapi/registerClient",s,t,function(){throw"Could not register the client. An unexpected error occured."})})}function d(){if(!i("localStorage")){throw"Unable to access localStorage API. You must define your own fetchClientData and storeClientData handlers."}var s={};if(window.localStorage.getItem("client-id")!==null){s.id=window.localStorage.getItem("client-id")}if(window.localStorage.getItem("client-secret")!==null){s.secret=window.localStorage.getItem("client-secret")}if(window.localStorage.getItem("client-name")!==null){s.name=window.localStorage.getItem("client-name")}return s}function g(s){if(!i("localStorage")){throw"Unable to access localStorage API. You must define your own fetchClientData and storeClientData handlers."}if(s.id!==undefined){window.localStorage.setItem("client-id",s.id)}else{window.localStorage.removeItem("client-id")}if(s.secret!==undefined){window.localStorage.setItem("client-secret",s.secret)}else{window.localStorage.removeItem("client-secret")}if(s.name!==undefined){window.localStorage.setItem("client-name",s.name)}else{window.localStorage.removeItem("client-name")}return true}function i(t){try{var v=window[t],s="__storage_test__";v.setItem(s,s);v.removeItem(s);return true}catch(u){return false}}function b(y,v,t,x){x=k(x,null);var u=new XMLHttpRequest(),w=null,s=5;w=p(y,v);u.open("POST",c);u.setRequestHeader("Content-Type","application/json;charset=UTF-8");u.onreadystatechange=function(){if(u.readyState!==u.DONE){return}var z=(u.getResponseHeader("content-type")==="application/json"?JSON.parse(u.responseText):u.responseText);if(u.status===200){if(typeof t==="function"){t(z,y,v,u)}return true}s-=1;if(typeof z!=="string"&&z["SWDAPI-Error"]!==undefined&&z["SWDAPI-Error"]["code"]!==undefined){var A=z["SWDAPI-Error"]["code"];if(A>=400006&&A<=400009){console.log("Request failed due to expiry data. Reseting system time offset and trying again.");q(u.getResponseHeader("date"))}else{if(A==400014||A==403002){console.log("SWDAPI: An api request failed because the server reported that this device's client id-secret pair are invalid. The device can obtain a new id-secret pair easily by calling registerClient() on an active instance.This has not been done automatically as obtaining a new client id will require any users authenticated with this device to re-authenticate which may be undesirable if you are running a device with many users.You may wish to investigate your data store to see why the client is no longer being recognized and restore the original ID if possible.");s=0}else{s=0}}}else{s=0}if(s>0){b(y,v,t,x);return true}if(typeof x==="function"){x(z,y,v,u)}};u.send(JSON.stringify({method:y,meta:w,data:v}));return true}function q(t){var u=new Date(t),s=u.getTime()-Date.now();console.log("Stored server clock offset: "+s+"ms (previously "+h+"ms)");h=s}function j(){return new Date(Date.now()+h)}};