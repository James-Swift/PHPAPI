var swdapi=swdapi||function(m,c){function a(q,r){return typeof q!=="undefined"?q:r}c=a(c,{});if(XMLHttpRequest===undefined){throw"SWDAPI: Required component 'XMLHttpRequest' not defined."}if(Date.now===undefined){throw"SWDAPI: Required component 'Date.now' not defined."}if(Number.isInteger===undefined){throw"SWDAPI: Required component 'Number.isInteger' not defined."}if(forge_sha256===undefined){throw"SWDAPI: Required component 'forge_sha256' not defined. Did you forget to include it?"}var e=m,k=0,g={request:f,serverDate:l,registerClient:b,fetchClientData:(c.fetchClientData!==undefined?c.fetchClientData:d),storeClientData:(c.storeClientData!==undefined?c.storeClientData:i),};if(c.setClientName!==undefined&&typeof c.setClientName==="string"){var h=g.fetchClientData();if(typeof h!=="object"||h.name===undefined||h.name!==c.setClientName){b(c.setClientName)}}if(c.serverTimestamp!==undefined){if(Number.isInteger(c.serverTimestamp)===true){o(c.serverTimestamp*1000)}else{console.log("Supplied serverTimestamp was an invalid format. Must be positive integer. The server time will be noted on the next request instead.")}}return g;function n(u,s){var t={},r=l().getTime(),q=g.fetchClientData();if(q.id!==undefined&&q.secret!==undefined){t.client={id:q.id}}t.nonce=(Math.random().toString(36)+"00000000000000000").slice(2,10+2);t.valid={from:Math.floor(r/1000)-(60),to:Math.floor(r/1000)+(60)};t.signature=p(u,t,s);return t}function p(w,u,t){var v,s,r,q=g.fetchClientData();v=JSON.stringify([w,u,t]);s="swdapi";if(u.client!==undefined&&u.client.id!==undefined&&q.secret!==undefined){s+=q.secret}if(u.user!==undefined){}r=forge_sha256(v+s);return r}function b(s,u){s=a(s,null);u=a(u,null);var t=g.fetchClientData(),q={salt:(Math.random().toString(36)+"00000000000000000").slice(2,10+2)},r;if(typeof t==="object"&&t.id!==undefined){q.id=t.id}if(typeof t==="object"&&t.id!==undefined&&t.secret!==undefined){q.signature=forge_sha256("swdapi"+t.id+t.secret)}if(typeof s==="string"){q.name=s}else{if(s!==null){throw"Cannot register client. Argument 1 must be either a string or null."}else{if(typeof t==="object"&&t.name!==undefined){q.name=t.name}else{throw"Cannot register a client without a name. No name is stored and no name was passed to registerClient()"}}}r=function(x){if(typeof x!=="object"||x.id===undefined||x.name===undefined){throw"Could not confirm registration of the client. An unexpected error occured."}var w={name:x.name,id:x.id,},v;if(t.id!==undefined&&t.secret!==undefined){w.secret=t.secret;v=forge_sha256("swdapi"+q.salt+q.id+t.secret);if(x.signature===undefined||v!==x.signature){throw"Failed to confirm the client id. The signature returned by the server doesn't match ours. This should be impossible without a man in the middle."}}else{if(x.secret!==undefined){w.secret=x.secret}}g.storeClientData(w);console.log("New client registered successfully: "+q.name);if(typeof u==="function"){u()}};f("swdapi/registerClient",q,r,function(v){if(typeof v!=="object"||v["SWDAPI-Error"]===undefined||!(v["SWDAPI-Error"].code===400014||v["SWDAPI-Error"].code===403002)){throw"Could not register the client. An unexpected error occured."}console.log("The client id-secret pair stored on this device has either expired or is corrupt. Requesting a new one.");delete t.id;delete t.secret;g.storeClientData({name:q.name,});delete q.id;delete q.signature;f("swdapi/registerClient",q,r,function(){throw"Could not register the client. An unexpected error occured."})})}function d(){if(!j("localStorage")){throw"Unable to access localStorage API. You must define your own fetchClientData and storeClientData handlers."}var q={};if(window.localStorage.getItem("client-id")!==null){q.id=window.localStorage.getItem("client-id")}if(window.localStorage.getItem("client-secret")!==null){q.secret=window.localStorage.getItem("client-secret")}if(window.localStorage.getItem("client-name")!==null){q.name=window.localStorage.getItem("client-name")}return q}function i(q){if(!j("localStorage")){throw"Unable to access localStorage API. You must define your own fetchClientData and storeClientData handlers."}if(q.id!==undefined){window.localStorage.setItem("client-id",q.id)}else{window.localStorage.removeItem("client-id")}if(q.secret!==undefined){window.localStorage.setItem("client-secret",q.secret)}else{window.localStorage.removeItem("client-secret")}if(q.name!==undefined){window.localStorage.setItem("client-name",q.name)}else{window.localStorage.removeItem("client-name")}return true}function j(r){try{var t=window[r],q="__storage_test__";t.setItem(q,q);t.removeItem(q);return true}catch(s){return false}}function f(w,t,r,v){v=a(v,null);var s=new XMLHttpRequest(),u=null,q=5;u=n(w,t);s.open("POST",e);s.setRequestHeader("Content-Type","application/json;charset=UTF-8");s.onreadystatechange=function(){if(s.readyState!==s.DONE){return}var x=(s.getResponseHeader("content-type")==="application/json"?JSON.parse(s.responseText):s.responseText);if(s.status===200){if(typeof r==="function"){r(x,w,t,s)}return true}q-=1;if(typeof x!=="string"&&x["SWDAPI-Error"]!==undefined&&x["SWDAPI-Error"]["code"]!==undefined){var y=x["SWDAPI-Error"]["code"];if(y>=400006&&y<=400009){console.log("Request failed due to expiry data. Reseting system time offset and trying again.");o(s.getResponseHeader("date"))}else{if(y==400014||y==403002){console.log("SWDAPI: An api request failed because the server reported that this device's client id-secret pair are invalid. The device can obtain a new id-secret pair easily by calling registerClient() on an active instance.This has not been done automatically as obtaining a new client id will require any users authenticated with this device to re-authenticate which may be undesirable if you are running a device with many users.You may wish to investigate your data store to see why the client is no longer being recognized and restore the original ID if possible.");q=0}else{q=0}}}else{q=0}if(q>0){f(w,t,r,v);return true}if(typeof v==="function"){v(x,w,t,s)}};s.send(JSON.stringify({method:w,meta:u,data:t}));return true}function o(r){var s=new Date(r),q=s.getTime()-Date.now();console.log("Stored server clock offset: "+q+"ms (previously "+k+"ms)");k=q}function l(){return new Date(Date.now()+k)}};